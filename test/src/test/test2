if(StringUtils.isBlank(pns[j])){
				
				if(StringUtils.isNotBlank(card_nos[j])){
					if(!validatorFasion(validator_card_no, card_nos[j])){
						param.put("error", "第"+ line + "行，sim卡号格式不正确" );
						return param;
					}
					k = arrayValidator(card_nos, card_nos[j],j);
					if(k != -1){
						param.put("error", "第"+ line + "行的卡号与第"+ (k+2) +"行重复" );
						return param;
					}
				}
				
				//imsi校验
				if(StringUtils.isNotBlank(imsis[j])){
					if(!validatorFasion(validator_imsi, imsis[j])){
						param.put("error", "第"+ line + "行，sim卡的imsis格式不正确" );
						return param;
					}
					k = arrayValidator(imsis, imsis[j],j);
					if(k != -1){
						param.put("error", "第"+ line + "行的imsi号与第"+ (k+2) +"行重复" );
						return param;
					}
				}
				//iccid校验
				if(StringUtils.isNotBlank(iccids[j])){
					if(iccids[j].length() != 20){
						param.put("error", "第"+ line + "行，sim卡iccid格式不正确" );
						return param;
					}
					k = arrayValidator(iccids, iccids[j],j);
					if(k != -1){
						param.put("error", "第"+ line + "行的iccid号与第"+ (k+2) +"行重复" );
						return param;
					}
				}
				
				
			}else{
				//PN不为空，则保存整个产品，而且全部零件格式校验
			    if(StringUtils.isBlank(card_nos[j])){
			    	param.put("error", "第"+ line + "行，sim卡号为空" );
					return param;
			    }else if(!validatorFasion(validator_card_no, card_nos[j])){
			    	param.put("error", "第"+ line + "行，sim卡 卡号 格式错误" );
					return param;
			    }
		    	k = arrayValidator(card_nos, card_nos[j],j);
				if(k != -1){
					param.put("error", "第"+ line + "行的卡号与第"+ (k+2) +"行重复" );
					return param;
				}
				
			    if(StringUtils.isBlank(imsis[j])){
			    	param.put("error", "第"+ line + "行，sim卡的 imsi 为空" );
					return param;
			    }else if(!validatorFasion(validator_imsi, imsis[j])){
			    	param.put("error", "第"+ line + "行，sim卡 imsi 格式错误" );
					return param;
			    }
		    	k = arrayValidator(imsis, imsis[j],j);
				if(k != -1){
					param.put("error", "第"+ line + "行的imsi号与第"+ (k+2) +"行重复" );
					return param;
				}
			    
			    if(StringUtils.isBlank(iccids[j])){
			    	param.put("error", "第"+ line + "行，sim卡的iccid为空" );
					return param;
			    }else if(iccids[j].length() != 20){
			    	param.put("error", "第"+ line + "行，sim卡 iccid 格式错误" );
					return param;
			    }
		    	k = arrayValidator(iccids, iccids[j],j);
				if(k != -1){
					param.put("error", "第"+ line + "行的iccid号与第"+ (k+2) +"行重复" );
					return param;
				}
			}
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			//数据库 数据 唯一性检查
		for (int j = 0; j<rows; j++ ){
			int line = j + 2;  //出错行数
			if(StringUtils.isBlank(pns[j])){
				//卡号校验
				if(StringUtils.isNotBlank(card_nos[j])){
					cs = cardSimDao.findUniqueBy("cardNo", card_nos[j]);
					if(null != cs){
						date = DateUtil.formatDate(cs.getCreatedDate(), "yyyy-MM-dd HH:mm:ss");
						param.put("error", "第"+ line + "行，sim卡的卡号: "+ card_nos[j] +" 于 "+ date +" 已入库，请核实！" );
						return param;
					}
				}
				//imsi校验
				if(StringUtils.isNotBlank(imsis[j])){
					
					cs = cardSimDao.findUniqueBy("imsi", imsis[j]);
					if(null != cs){
						date = DateUtil.formatDate(cs.getCreatedDate(), "yyyy-MM-dd HH:mm:ss");
						param.put("error", "第"+ line + "行，sim卡的IMSI: "+ imsis[j] +" 于 "+ date +" 已入库，请核实！" );
						return param;
					}
				}
				
				//iccid校验
				if(StringUtils.isNotBlank(iccids[j])){
					cs = cardSimDao.findUniqueBy("iccid", iccids[j]);
					if(null != cs){
						date = DateUtil.formatDate(cs.getCreatedDate(), "yyyy-MM-dd HH:mm:ss");
						param.put("error", "第"+ line + "行，sim卡的iccid: "+ iccids[j] +" 于 "+ date +" 已入库，请核实！" );
						return param;
					}
				}
			}else{
				if(StringUtils.isBlank(pns[j])){
					wp = warehouseProductDao.findUniqueBy("productNo", pns[j]);
					if(null != wp){
						param.put("error", "第"+ line + "行，产品序列号'" + pns[j] + "'之前已入库，请核实！" );
						return param;
					}
				}
				sim_param = new HashMap<String,String>();
				sim_param.put("cardNo", card_nos[j]);
				sim_param.put("iccid", iccids[j]);
				sim_param.put("imsi", imsis[j]);
				cs = cardSimDao.findUniqueSim(sim_param);
				if(null != cs){
					param.put("error", "第"+ line + "行，该零件之前已入库，请核实！" );
					sim_param = null;
					return param;
				}
			}
		}
